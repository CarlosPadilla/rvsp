// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Invite renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Invite
    invites={undefined}
    onSend={[Function]}
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
    storeSubscription={
        Subscription {
            "listeners": Object {
              "notify": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": null,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Saada kutse
</h1>,
        <div>
          <Input
                    className="input-name"
                    field="name"
                    label="Nimi"
                    onChange={[Function]}
                    type="text"
                    value=""
          />
</div>,
        <div>
          <Input
                    className="input-email"
                    field="email"
                    label="Email"
                    onChange={[Function]}
                    type="email"
                    value=""
          />
</div>,
        <button
          className="btn-send"
          onClick={[Function]}
>
          Saada
</button>,
        <div />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Saada kutse",
        },
        "ref": null,
        "rendered": "Saada kutse",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Input
            className="input-name"
            field="name"
            label="Nimi"
            onChange={[Function]}
            type="text"
            value=""
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "input-name",
            "field": "name",
            "label": "Nimi",
            "onChange": [Function],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Input
            className="input-email"
            field="email"
            label="Email"
            onChange={[Function]}
            type="email"
            value=""
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "input-email",
            "field": "email",
            "label": "Email",
            "onChange": [Function],
            "type": "email",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Saada",
          "className": "btn-send",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Saada",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Saada kutse
</h1>,
          <div>
            <Input
                        className="input-name"
                        field="name"
                        label="Nimi"
                        onChange={[Function]}
                        type="text"
                        value=""
            />
</div>,
          <div>
            <Input
                        className="input-email"
                        field="email"
                        label="Email"
                        onChange={[Function]}
                        type="email"
                        value=""
            />
</div>,
          <button
            className="btn-send"
            onClick={[Function]}
>
            Saada
</button>,
          <div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Saada kutse",
          },
          "ref": null,
          "rendered": "Saada kutse",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Input
              className="input-name"
              field="name"
              label="Nimi"
              onChange={[Function]}
              type="text"
              value=""
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "input-name",
              "field": "name",
              "label": "Nimi",
              "onChange": [Function],
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Input
              className="input-email"
              field="email"
              label="Email"
              onChange={[Function]}
              type="email"
              value=""
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "input-email",
              "field": "email",
              "label": "Email",
              "onChange": [Function],
              "type": "email",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Saada",
            "className": "btn-send",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Saada",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
